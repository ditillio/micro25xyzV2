---
schema: EconSchema
version: 1
aspectRatio: 0.7
params:
  - {name: x1, value: 4, min: 0.5, max: 9, round: 0.5}
  - {name: x2, value: 4, min: 0.5, max: 9, round: 0.5}


# income and prices
  - {name: m, value: 20, min: 10, max: 50, round: 5}
  - {name: p1, value: 5, min: 1, max: 10, round: 0.5}
  - {name: p2, value: 5, min: 1, max: 10, round: 0.5}


# consumption levels on 45¬∞ line
  - {name: c1, value: 1}
  - {name: c2, value: 2}
  - {name: c3, value: 3}
  - {name: c4, value: 4}
  - {name: c5, value: 5}
  - {name: c6, value: 6}
  - {name: c7, value: 7}
  - {name: c8, value: 8}
  - {name: c9, value: 9}

  - {name: s, value: 10, min: 5, max: 15}



calcs:

# budget line intercepts
  xintercept: params.m/params.p1
  yintercept: params.m/params.p2


# optimal bundle when interior
  x1int: ( (params.m) + (params.s) * ( params.p2 - params.p1 ) ) / ( 2 * params.p1 )
  x2int: ( (params.m) + (params.s) * ( params.p1 - params.p2 ) ) / ( 2 * params.p2 )


# optimal bundle and indirect utility
  x1opt: max(0,min(calcs.xintercept,calcs.x1int))
  x2opt: max(0,min(calcs.yintercept,calcs.x2int))
  umax: ((calcs.x1opt)*(calcs.x2opt))+((params.s)*((calcs.x1opt)+(calcs.x2opt)))

# price of X above which X=0
  maxP1: (params.p2)+(params.m)/(params.s)
# price of X below which Y=0
  minP1: max(0,(params.p2)-(params.m)/(params.s))
# demand of X when PX=minP1
  x1min: (params.m)/(calcs.minP1)

# utility levels
  u1: ((params.c1)*(params.c1))+((params.s)*((params.c1)+(params.c1)))
  u2: ((params.c2)*(params.c2))+((params.s)*((params.c2)+(params.c2)))
  u3: ((params.c3)*(params.c3))+((params.s)*((params.c3)+(params.c3)))
  u4: ((params.c4)*(params.c4))+((params.s)*((params.c4)+(params.c4)))
  u5: ((params.c5)*(params.c5))+((params.s)*((params.c5)+(params.c5)))
  u6: ((params.c6)*(params.c6))+((params.s)*((params.c6)+(params.c6)))
  u7: ((params.c7)*(params.c7))+((params.s)*((params.c7)+(params.c7)))
  u8: ((params.c8)*(params.c8))+((params.s)*((params.c8)+(params.c8)))
  u9: ((params.c9)*(params.c9))+((params.s)*((params.c9)+(params.c9)))

# case check
  pricediff: (params.p2) - (params.p1)
  Dpricediff: (params.m)/(params.s)

layout:
  TwoVerticalGraphsPlusSidebar:


    topGraph:
      xAxis:
        max: 9.5
        ticks: 0
      yAxis:
        max: 9.5
        ticks: 0

      objects:

      - Label:
            coordinates: [9.33, 0]
            text: "` \\\\text{unit√† di $X$} `"
            position: l
      - Label:
            coordinates: [0, 9.5]
            text: "` \\\\text{unit√† di $Y$}  `"

# Indifference Map
      - ContourMap:
          levels: [calcs.u1, calcs.u2, calcs.u3, calcs.u4, calcs.u5, calcs.u6, calcs.u7, calcs.u8, calcs.u9]
          yMax: 10
          xMax: 10
          strokeWidth: 0.25
          fn: (x)*(y)+(params.s)*((x)+(y))

# budget line
      - Line:
          point: [0,calcs.yintercept]
          slope: -params.p1/params.p2
          color: Green
          strokeWidth: 1.5
          max: calcs.xintercept
      - Point:
          coordinates: [calcs.xintercept, 0]
          droplines: {vertical: calcs.xintercept.toFixed(2), horizontal: }
          color: black
          r: 0
      - Point:
          coordinates: [0, calcs.yintercept]
          droplines: {vertical: , horizontal: calcs.yintercept.toFixed(2)}
          color: black
          r: 0

# optimal bundle
      - Point:
          coordinates: [calcs.x1opt, calcs.x2opt]
          droplines:
            horizontal: calcs.x2opt.toFixed(2)
            vertical: calcs.x1opt.toFixed(2)
          color: Blue
          r: 4
          strokeWidth: 0.5

# Indifference curve at optimal bundle
      - Curve:
          fn: ((calcs.umax)-((params.s)*(x)))/((x)+(params.s))
          color: Black
          strokeWidth: 1.5
      



















    bottomGraph:
      xAxis:
        max: 9.5
        ticks: 0
      yAxis:
        max: 9.5
        ticks: 0

      objects:

      - Label:
            coordinates: [9.33, 0]
            text: "` \\\\text{unit√† di $X$} `"
            position: l
      - Label:
            coordinates: [0, 9.5]
            text: "` \\\\text{euro/unit√† di $X$}  `"


# demand function
      - Curve:
          fn: ((params.m)+(params.s)*(params.p2))/((2)*(x)+(params.s))
          color: Blue
          max: (params.m)/(calcs.minP1)
          strokeWidth: 2.5
          show: calcs.minP1 > 0
      - Curve:
          fn: (params.m)/(x)
          color: Blue
          min: (params.m)/(calcs.minP1)
          strokeWidth: 2.5
          show: calcs.minP1 > 0
      - Curve:
          fn: ((params.m)+(params.s)*(params.p2))/((2)*(x)+(params.s))
          color: Blue
          strokeWidth: 2.5
          show: calcs.minP1 == 0
      - Segment:
          a: [0.02, calcs.maxP1]
          b: [0.02, 1000]
          color: Blue
          strokeWidth: 3
      - Point:
          coordinates: [0, calcs.maxP1]
          droplines:
            horizontal: calcs.maxP1.toFixed(2)
          color: Blue
          r: 0
      - Point:
          coordinates: [(params.m)/(calcs.minP1), calcs.minP1]
          droplines:
            horizontal: calcs.minP1.toFixed(2)
            vertical: calcs.x1min.toFixed(2)
          color: Blue
          r: 0
          strokeWidth: 0.5




# optimal choice
      - Point:
          coordinates: [calcs.x1opt, params.p1]
          droplines:
            vertical: calcs.x1opt.toFixed(2)
          color: Blue
          r: 4
          strokeWidth: 0.5
          show: calcs.x1opt > 0
      - Point:
          coordinates: [0.02, params.p1]
          droplines:
            vertical: 0
          color: Blue
          r: 4
          strokeWidth: 0.5
          show: calcs.x1opt == 0
      - Point:
          coordinates: [calcs.x1opt, params.p1]
          droplines:
            horizontal: params.p1.toFixed(2)
          color: Green
          r: 0
          strokeWidth: 0.7
# vertical dropline 
      - Segment:
          a: [calcs.x1opt, params.p1]
          b: [calcs.x1opt, 1000]
          strokeWidth: 0.6
          lineStyle: dotted
          color: blue


# legenda
      - Label:
            coordinates: [7, 6.5]
            text: "` \\\\text{curva di} `"
            position: c
            color: Blue
      - Label:
            coordinates: [7, 6]
            text: "` \\\\text{domanda individuale} `"
            position: c
            color: Blue
      - Label:
            coordinates: [7, 5.5]
            text: "` \\\\text{del bene $X$} `"
            position: c
            color: Blue



















    sidebar:
      controls:
      - title: Scelta ottima e funzione di domanda individuale del bene ùëã (beni sostituti)

        description: Selezionare un valore del parametro ùë†. Selezionare poi reddito e prezzi per calcolare
                      la scelta ottima del consumatore e la funzione di domanda del bene ùëã.

      - title: "` `"

        divs:

          - html: "`  `"

          - html: "` I valori selezionati sono tali che
                    $$
                    P_Y-P_X=${calcs.pricediff.toFixed(1)} \\\\qquad M/s = ${calcs.Dpricediff.toFixed(2)}
                    $$
                  `"

          - html: "` Siamo quindi nel caso (i). `"
            show: calcs.pricediff > calcs.Dpricediff


          - html: "` Siamo quindi nel caso (ii). `"
            show: (calcs.pricediff)+(calcs.Dpricediff)<0

          - html: "` Siamo quindi nel caso (iii). `"
            show: calcs.pricediff <= calcs.Dpricediff && (calcs.pricediff)+(calcs.Dpricediff) >= 0

          - html: <br>
            show: calcs.pricediff <= calcs.Dpricediff && (calcs.pricediff)+(calcs.Dpricediff) >= 0

          - html: "` Vincolo di bilancio:
                    $$
                    ${params.p1.toFixed(1)}X+${params.p2.toFixed(1)}Y = ${params.m.toFixed(0)}
                    $$
                     `"
            show: calcs.pricediff <= calcs.Dpricediff && (calcs.pricediff)+(calcs.Dpricediff) >= 0

          - html: "` Condizione di tangenza:
                    $$
                    ${params.p1.toFixed(1)}(X+${params.s})=${params.p2.toFixed(1)}(Y+${params.s})
                    $$
                     `"
            show: calcs.pricediff <= calcs.Dpricediff && (calcs.pricediff)+(calcs.Dpricediff) >= 0

          - html: <br>

          - html: "` Scelta ottima:
                    $$
                    X=${calcs.x1opt.toFixed(2)} \\\\qquad Y=${calcs.x2opt.toFixed(2)}
                    $$
                     `"


        sliders:
        - param: s
          label: s
        - param: m
          label: M
        - param: p1
          label: P_X
        - param: p2
          label: P_Y







    # explanation:

    #     divs:


    #       - html: "`
    #               <ul>
    #                 <li>
    #                   <p><small>
    #                         Anche in questo caso vale la legge della domanda.
    #                   </small></p>
    #                 </li>
    #                 <li>
    #                   <p><small>
    #                         In entrambi i casi, una variazione del reddito ($M$) provoca uno <i>spostamento della curva</i>
    #                         di domanda del bene, verso destra o sinistra a seconda che il
    #                         reddito aumenti o diminuisca (il bene $X$ √® normale).
    #                   </small></p>
    #                 </li>
    #                 <li>
    #                   <p><small>
    #                       Nel primo caso (preferenze Cobb-Douglas) una variazione del prezzo 
    #                       dell'altro bene ($P_Y$) modifica la quantit√†
    #                       domandata di $Y$ ma non quella di $X$:  
    #                       al variare di $P_Y$ la curva di domanda di $X$ non si sposta
    #                       (i due beni sono indipendenti).
    #                       Nel secondo caso (beni sostituti) una variazione di $P_Y$ modifica la quantit√†
    #                       domandata di $Y$ (a meno che $P_Y$ non sia gi√† tanto alto
    #                       che il consumo di $Y$ √® zero) ma anche la quantit√† domandata di $X$
    #                       (a meno che $P_Y$ non sia gi√† tanto basso
    #                       che il consumo di $X$ √® zero). In particolare, un aumento di $P_Y$ 
    #                       fa spostare a destra la curva di domanda di $X$, mentre una riduzione
    #                       di $P_Y$ la fa spostare a sinistra (i beni sono sostituti).
    #                   </small></p>
    #                 </li>
    #               </ul>
    #               `"












