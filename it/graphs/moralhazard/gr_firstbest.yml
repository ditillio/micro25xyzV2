params:

- {name: w, value: 500, min: 0, max: 1500, round: 5}
- {name: b, value: 500, min: 0, max: 1000, round: 40}
- {name: d, value: 10, min: 0, max: 4}
- {name: ubar, value: 25}
- {name: effort, value: 0, min: 0, max: 1}

- {name: p2H, value: 0.75}
- {name: p2L, value: 0.25}

- {name: x1, value: 1000} # revenue in case of failure
- {name: x2, value: 3000} # revenue in case of success

- {name: riskav, value: 0}


calcs:

  d: "( (params.riskav < 1) ? '600' : (params.d) )"
  ubar: "( (params.riskav < 1) ? '625' : (params.ubar) )"

  p2H: params.p2H
  p2L: params.p2L

  p1H: (1)-(calcs.p2H)
  p1L: (1)-(calcs.p2L)

  w1: params.w
  u1L: "( (params.riskav < 1) ? (calcs.w1) : sqrt(calcs.w1) )"
  u1H: (calcs.u1L)-(calcs.d)

  w2: (params.w)+(params.b)
  u2L: "( (params.riskav < 1) ? (calcs.w2) : sqrt(calcs.w2) )"
  u2H: (calcs.u2L)-(calcs.d)

  ewH: (calcs.p1H)*(calcs.w1)+(calcs.p2H)*(calcs.w2)
  ewL: (calcs.p1L)*(calcs.w1)+(calcs.p2L)*(calcs.w2)

  euH: (calcs.p1H)*(calcs.u1H)+(calcs.p2H)*(calcs.u2H)
  euL: (calcs.p1L)*(calcs.u1L)+(calcs.p2L)*(calcs.u2L)

  uMax: "( (params.riskav < 1) ? '1500' : '40' )"

  eu: "( (params.effort < 1) ? max(calcs.euH,calcs.euL) : calcs.euH )"



  profitH: (calcs.p1H)*((params.x1)-(calcs.w1))+(calcs.p2H)*((params.x2)-(calcs.w2))
  profitL: (calcs.p1L)*((params.x1)-(calcs.w1))+(calcs.p2L)*((params.x2)-(calcs.w2))


aspectRatio: 1

layout:
  OneGraphPlusSidebar:

    graph: 
      xAxis:
        max: 1500
        ticks: 0
      yAxis:
        max: calcs.uMax
        min: -(1.1)*(calcs.d)
        ticks: 0

      objects:

        - Label:
                coordinates: [1500, 0]
                text: "` \\\\text{Salario} `"
        - Label:
                coordinates: [0, calcs.uMax]
                text: "` \\\\text{Utilità}  `"

# bernoulli utility function with high effort (neutral)
        - Line:
            yIntercept: -(calcs.d)
            slope: 1
            color: Blue
            label:
              text: "` U_H=W-D `"
              x: 1500
              position: c
            strokeWidth: 1.5
            show: params.riskav == 0
        - Point:
            coordinates: [0, -(calcs.d)]
            droplines: {vertical: , horizontal: -(calcs.d)}
            strokeWidth: 0.5
            color: Blue
            r: 0
            show: params.riskav == 0

# bernoulli utility function with low effort (neutral)
        - Line:
            yIntercept: 0
            slope: 1
            color: Blue
            label:
              text: "` U_L=W `"
              x: 1500
              position: c
            strokeWidth: 1.5
            show: params.riskav == 0
        - Point:
            coordinates: [0, 0]
            droplines: {vertical: , horizontal: 0}
            strokeWidth: 0.5
            color: Blue
            r: 0
            show: params.riskav == 0

# bernoulli utility function with high effort (averse)
        - Curve:
            fn: sqrt(x)-(calcs.d)
            color: Blue
            label:
              text: "` U_H = \\\\sqrt{W} - D `"
              x: 1500
            strokeWidth: 1.5
            show: params.riskav == 1
        - Label:
            coordinates: [0, -(calcs.d)]
            text: "` \\\\small -${params.d}  `"
            position: r
            color: Blue
            show: params.riskav == 1

# bernoulli utility function with low effort (averse)
        - Curve:
            fn: sqrt(x)
            color: Blue
            label:
              text: "` U_L = \\\\sqrt{W} `"
              x: 1500
            strokeWidth: 1.5
            show: params.riskav == 1
        - Label:
            coordinates: [0, 0]
            text: "` \\\\small 0  `"
            position: r
            color: Blue
            show: params.riskav == 1

# points (high effort)
        - Point:
            coordinates: [calcs.w1, calcs.u1H]
            droplines: {vertical: calcs.w1.toFixed(0), horizontal: calcs.u1H.toFixed(2)}
            strokeWidth: 0.5
            color: Blue
            r: 3
        - Point:
            coordinates: [calcs.w2, calcs.u2H]
            droplines: {vertical: calcs.w2.toFixed(0), horizontal: calcs.u2H.toFixed(2)}
            strokeWidth: 0.5
            color: Blue
            r: 3
        - Segment:
            a: [calcs.w1, calcs.u1H]
            b: [calcs.w2, calcs.u2H]
            color: Red
            strokeWidth: 1.5
            lineStyle: dashed
        - Point:
            coordinates: [calcs.ewH, calcs.euH]
            droplines: {vertical: calcs.ewH.toFixed(0), horizontal: calcs.euH.toFixed(2)}
            strokeWidth: 0.5
            color: Red
            r: 3
            label:
              text: H
              position: tl

# points (low effort)
        - Point:
            coordinates: [calcs.w1, calcs.u1L]
            droplines: {vertical: calcs.w1.toFixed(0), horizontal: calcs.u1L.toFixed(2)}
            strokeWidth: 0.5
            color: Blue
            r: 3
            show: params.effort == 0
        - Point:
            coordinates: [calcs.w2, calcs.u2L]
            droplines: {vertical: calcs.w2.toFixed(0), horizontal: calcs.u2L.toFixed(2)}
            strokeWidth: 0.5
            color: Blue
            r: 3
            show: params.effort == 0
        - Segment:
            a: [calcs.w1, calcs.u1L]
            b: [calcs.w2, calcs.u2L]
            color: Red
            strokeWidth: 1.5
            lineStyle: dashed
            show: params.effort == 0
        - Point:
            coordinates: [calcs.ewL, calcs.euL]
            droplines: {vertical: calcs.ewL.toFixed(0), horizontal: calcs.euL.toFixed(2)}
            strokeWidth: 0.5
            color: Red
            r: 3
            label:
              text: L
              position: tl
            show: params.effort == 0







# reservation utility
        - Line:
            point: [0,calcs.ubar]
            slope: 0
            color: Green
            strokeWidth: 1
            label:
              text: "` \\\\underline{U} = ${calcs.ubar} `"
              x: 1500



# contract (risk neutral case)
        - Rectangle:
            a: [150,1100]
            b: [850,1500]
            fill: brown
            opacity: 0.1
            stroke: black
            strokeWidth: 1
            show: params.riskav == 0
        - Rectangle:
            a: [160,1110]
            b: [840,1490]
            fill: white
            opacity: 0.1
            stroke: black
            strokeWidth: 1
            show: params.riskav == 0
        - Label:
            coordinates: [500, 1450]
            text: \text{\small CONTRATTO DI LAVORO}
            bgcolor: none
            show: params.riskav == 0
        - Label:
            coordinates: [230, 1370]
            text: "` \\\\text{\\\\small Impegno minimo: } ${params.effort} `"
            bgcolor: none
            position: l
            show: params.riskav == 0
        - Label:
            coordinates: [230, 1310]
            text: "` \\\\text{\\\\small Salario base: } ${params.w} `"
            bgcolor: none
            position: l
            show: params.riskav == 0
        - Label:
            coordinates: [230, 1250]
            text: "` \\\\text{\\\\small Bonus: } ${params.b} `"
            bgcolor: none
            position: l
            show: params.riskav == 0
        - Label:
            coordinates: [190, 1155]
            text: "` \\\\text{\\\\small Firma del lavoratore: } \\\\underline{\\\\qquad}  `"
            bgcolor: none
            position: l
            show: params.riskav == 0
        - Label:
            coordinates: [730, 1170]
            text: \Large{\checkmark}
            bgcolor: none
            color: green
            show: params.riskav == 0 && calcs.eu >= calcs.ubar
        - Label:
            coordinates: [730, 1170]
            text: \Large{\boldsymbol\times}
            bgcolor: none
            color: red
            show: params.riskav == 0 && calcs.eu < calcs.ubar


















    sidebar:

      controls:

      - title: Contratto First-Best
        description: Selezionare l'atteggiamento verso il rischio del lavoratore.

        radioGroup:
          param: riskav
          options:
            - Lavoratore neutrale al rischio
            - Lavoratore avverso al rischio

      - title: Lavoratore neutrale al rischio
        description: Muovere i cursori fino a individuare il contratto che massimizza il profitto dell'impresa.
        sliders:
        - param: effort
          label: \text{Impegno}
        - param: w
          label: \text{Salario base}
        - param: b
          label: \text{Bonus}
        divs:
        - html: "` 
                      `"
        show: params.riskav == 0






      - title: Lavoratore avverso al rischio
        description: Muovere i cursori fino a individuare il contratto che massimizza il profitto dell'impresa.
        sliders:
        - param: effort
          label: \text{Impegno}
        - param: w
          label: \text{Salario base}
        - param: b
          label: \text{Bonus}
        divs:
        - html: <br>
        - html: "` 
                      `"
        show: params.riskav == 1




    # explanation:
    #   divs:
    #     - html: "` La lotteria
    #                 $$
    #                 \\\\text{$W_1=${params.w1}$ con probabilità $0.5$}
    #                 \\\\qquad
    #                 \\\\text{$W_2=${calcs.w2ep}$ con probabilità $0.5$}
    #                 $$
    #                 ha valore atteso $
    #                 EP=${params.p1}\\\\times ${params.w1}+
    #                 ${calcs.p2}\\\\times ${calcs.w2ep} = ${params.ep}$
    #                 e dà utilità attesa
    #                 $$
    #                 EU=${params.p1}\\\\times ${params.w1}+
    #                 ${calcs.p2}\\\\times ${calcs.w2ep} = ${params.ep}$
    #                 $$
    #                   `"
    #       show: params.which == 0
















